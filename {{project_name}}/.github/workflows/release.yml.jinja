name: Release on version tag pushed

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version to release'
        required: true
  repository_dispatch:
    types: [trigger-release]

jobs:
  pypi-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '{{ python_version }}'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: {% raw %}${{ secrets.PYPI_API_TOKEN }}{% endraw %}
        run: |
          python -m build
          twine upload dist/*

  create-gh-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          RELEASE_TAG: {% raw %}${{ github.event.inputs.version_tag }}{% endraw %}
        with:
          tag: {% raw %}${{ github.event.inputs.version_tag }}{% endraw %}
          version: {% raw %}${{ github.event.inputs.version_tag }}{% endraw %}
          name: {% raw %}${{ github.event.inputs.version_tag }}{% endraw %}
          publish: true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '{{ python_version }}'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build
        run: |
          python -m build

      - name: Upload release assets
        env:
          GH_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
        run: |
          for file in dist/*; do
            echo "Uploading $file..."
            gh release upload {% raw %}${{ github.event.inputs.version_tag }}{% endraw %} "$file" --clobber
          done
